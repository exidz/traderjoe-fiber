{
    "swagger": "2.0",
    "info": {
        "description": "Traderjoe price pool feed Rest API, developed in Golang using Fiber. Support v2.1 Liquidity Book Contracts, v2 Liquidity Book Contracts, and v1 Trader Joe Contracts across three major chains: Avalanche, Arbitrum, and Binance Smart Chain.",
        "title": "TraderJoe Fiber Price pool feed API",
        "contact": {
            "name": "API Support",
            "email": "exidz@protonmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/{chain}/v1/batch-prices": {
            "post": {
                "description": "Retrieves batch pool prices for multiple pairs on different chains using the JoeSwap protocol.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "v1 Batch pool price"
                ],
                "summary": "Get batch pool prices",
                "parameters": [
                    {
                        "description": "Batch pool request data",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.JoeBodyData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "The chain name (avax, arb, bsc)",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.JoeBatchErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.JoeBatchErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.JoeBatchErrorResponse"
                        }
                    }
                }
            }
        },
        "/{chain}/v1/prices/{base}/{quote}": {
            "get": {
                "description": "Retrieves the price data for a v1 pool pair on different chains.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V1 Get Pool price"
                ],
                "summary": "Get v1 pool pair price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The base asset contract address",
                        "name": "base",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The quote asset contract address",
                        "name": "quote",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The chain name (avax, arb, bsc)",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{chain}/v2/batch-prices": {
            "post": {
                "description": "Retrieves batch pool prices for multiple pairs on different chains.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Batch Liquidity Book Pool price"
                ],
                "summary": "Get batch v2 liquidity book pool prices",
                "parameters": [
                    {
                        "description": "Batch Liquidity book pool prices request data",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BodyData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Chain Name (avax, arb or bsc)",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.BatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BatchErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.BatchErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.BatchErrorResponse"
                        }
                    }
                }
            }
        },
        "/{chain}/v2/prices/{base}/{quote}/{binstep}": {
            "get": {
                "description": "Retrieves the price data for a v2 liquidity book pool pair on different chains.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Get Liquidity Book Pool price"
                ],
                "summary": "Get v2 liquidity book pool pair price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The base asset contract address",
                        "name": "base",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The quote asset contract address",
                        "name": "quote",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The binstep value",
                        "name": "binstep",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The chain name (avax, arb, bsc)",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{chain}/v2_1/batch-prices": {
            "post": {
                "description": "Retrieves batch pool prices for multiple pairs on different chains.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2.1 Batch Liquidity Book Pool price"
                ],
                "summary": "Get batch v2.1 liquidity book pool prices",
                "parameters": [
                    {
                        "description": "Batch Liquidity book pool prices request data",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.BodyData"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Chain Name (avax, arb or bsc)",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.BatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BatchErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.BatchErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.BatchErrorResponse"
                        }
                    }
                }
            }
        },
        "/{chain}/v2_1/prices/{base}/{quote}/{binstep}": {
            "get": {
                "description": "Retrieves the price data for a v2.1 liquidity book pool pair on different chains.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2.1 Get Liquidity Book Pool price"
                ],
                "summary": "Get v2.1 liquidity book pool pair price",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The base asset contract address",
                        "name": "base",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The quote asset contract address",
                        "name": "quote",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The binstep value",
                        "name": "binstep",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The chain name (avax, arb, bsc)",
                        "name": "chain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.BatchErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/types.BatchParams"
                }
            }
        },
        "types.BatchParams": {
            "type": "object",
            "properties": {
                "baseAsset": {
                    "type": "string"
                },
                "binStep": {
                    "type": "integer"
                },
                "quoteAsset": {
                    "type": "string"
                }
            }
        },
        "types.BatchResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "types.BodyData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.LbPayload"
                    }
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "types.JoeBatchErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/types.JoeBatchParams"
                }
            }
        },
        "types.JoeBatchParams": {
            "type": "object",
            "properties": {
                "baseAsset": {
                    "type": "string"
                },
                "quoteAsset": {
                    "type": "string"
                }
            }
        },
        "types.JoeBodyData": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.JoePayload"
                    }
                }
            }
        },
        "types.JoePayload": {
            "type": "object",
            "properties": {
                "baseAsset": {
                    "type": "string"
                },
                "quoteAsset": {
                    "type": "string"
                }
            }
        },
        "types.LbPayload": {
            "type": "object",
            "properties": {
                "baseAsset": {
                    "type": "string"
                },
                "binStep": {
                    "type": "integer"
                },
                "quoteAsset": {
                    "type": "string"
                }
            }
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        }
    }
}