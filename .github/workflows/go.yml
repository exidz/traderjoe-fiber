# This is a basic workflow to help you get started with Actions

name: CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
    - master
    - staging
    - develop
  pull_request:
    branches:
    - master
    - staging
    - develop
jobs:
  # The "build" workflow
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3
    
    # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.0'
        
    
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        
    # Run build of the application
    - name: Run build
      run: go build . 
      
    # Run vet & lint on the code
    - name: Run vet
      run: |
        go vet ./...
    
    # Run testing on the code
    - name: Run testing
      run: go test -v ./...

    - name: Make Directory
      run: mkdir -p newman-results
    
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'

    - name: Install Newman
      run: |
        echo "Instaling Newman"
        npm install newman -g
        pm install -g newman-reporter-htmlextra
    - name: Run Newman
      env:
          POSTMAN_API_URL: 'https://api.getpostman.com'
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
          POSTMAN_COLLECTION_UID: ${{ secrets.POSTMAN_COLLECTION_UID }}
      run: |
          newman run "${{env.POSTMAN_API_URL}}/collections/${{env.POSTMAN_COLLECTION_UID}}?apikey=${{env.POSTMAN_API_KEY}}" \
          -r htmlextra,cli --reporter-htmlextra-export newman-results/htmlreport.html
      # Upload test results to workspace
    - name: Upload Results
      uses: actions/upload-artifact@v3
      with:
          name: Postman_Test_Reports
          path: newman-results


        